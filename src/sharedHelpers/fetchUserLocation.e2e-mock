type UserLocation = {
  latitude: number,
  longitude: number,
  positional_accuracy: number

}
const fetchUserLocation = async ( ): Promise<UserLocation> => new Promise( resolve => {
  setTimeout( ( ) => resolve( {
    // Chuck's house. Note that the e2e tests run in a UTC environment, so the
    // observed_on_string will be set to a UTC time. If these coordinates do
    // fall within that time zone west of that (i.e. in the past),
    // observation creation will fail during the period of the day when UTC
    // time has crossed into the date after the date at these coordinates.
    // The opposite (when local time is in a time zone behind the time zone of
    // the coordinates) will not fail, but it might make an observation
    // that's a day behind when you were expecting.
    latitude: 51.3313127,
    longitude: 0.0509862,
    positional_accuracy: 5
  } ), 1000 );
} );

export default fetchUserLocation;
